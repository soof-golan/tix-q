// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 3
  interface            = "asyncio"
}

generator jsclient {
  provider = "prisma-client-js"

  // This is a total hack, because prisma is not a mature ORM
  // that support multiple languages in a sane manner
  output = "../frontend/node_modules/.prisma/client"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model WaitingRoom {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(dbgenerated("now()"))
  updatedAt DateTime @updatedAt

  opensAt  DateTime
  closesAt DateTime

  markdown String
  title    String

  registrants Registrant[]
  owner       User         @relation(fields: [ownerId], references: [id])
  ownerId     String       @db.Uuid
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(dbgenerated("now()"))
  updatedAt DateTime @updatedAt

  firebaseUid  String        @unique
  waitingRooms WaitingRoom[]
}

enum IdType {
  ID_CARD /// Local ID card
  PASSPORT /// International passport
}

model Registrant {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(dbgenerated("now()"))
  updatedAt DateTime @updatedAt

  legalName   String
  email       String
  idNumber    String
  idType      IdType
  phoneNumber String

  // Bot mitigation
  turnstileSuccess   Boolean   @default(false)
  turnstileTimestamp DateTime?

  WaitingRoom   WaitingRoom @relation(fields: [waitingRoomId], references: [id])
  waitingRoomId String      @db.Uuid
}
